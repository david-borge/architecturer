####  Redireccionar a https y sin www  ####
RewriteEngine On
RewriteCond %{HTTP_HOST} ^(www\.)(.+) [OR]
RewriteCond %{HTTPS} off
RewriteCond %{HTTP_HOST} ^(www\.)?(.+)
RewriteRule ^ https://%2%{REQUEST_URI} [R=301,L]





#### Activar HSTS ####
# Explicación de Semrush: HSTS (HTTP Strict Transport Security) informa a los navegadores web que pueden comunicarse con los servidores solo a través de conexiones HTTPS. Por lo tanto, para garantizar que no ofreces contenido inseguro a tu audiencia, recomendamos que implementes la compatibilidad HSTS.
# Comprobación: https://geekflare.com/tools/hsts-test
Header set Strict-Transport-Security "max-age=31536000" env=HTTPS




#### Activar Content Security Policy (CSP) ####
# Documentación: https://content-security-policy.com/examples/htaccess/
# Documentación para AMP (la documentación es incorrecta; no se puede usar <meta http-equiv="Content-Security-Policy" content="..." /> con AMP; hay que hacerlo con .htaccess): https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/secure-pages/?format=websites
# Comprobación: https://cspvalidator.org/
# FIXME: esto provoca un error al añadir #development=1 a la URL. El error es: Uncaught (in promise) RuntimeError: Aborted(CompileError: WebAssembly.instantiate(): Wasm code generation disallowed by embedder). Build with -sASSERTIONS for more info. validator_wasm.js
# Header add Content-Security-Policy "default-src * data: blob:; script-src blob unsafe-eval: https://cdn.ampproject.org/v0.js https://cdn.ampproject.org/v0/ https://cdn.ampproject.org/viewer/ https://cdn.ampproject.org/rtv/ https://cdn.ampproject.org/v0.mjs https://192.168.1.42:3000/service-worker-pagina-estas-offline.min.js https://cdn.ampproject.org/v0/validator_wasm.js; object-src 'none'; style-src 'unsafe-inline' https://cdn.ampproject.org/rtv/ https://cdn.materialdesignicons.com https://cloud.typography.com https://fast.fonts.net https://fonts.googleapis.com https://maxcdn.bootstrapcdn.com https://p.typekit.net https://use.fontawesome.com https://use.typekit.net; worker-src blob: https://davidborge.com/5b9feb56-2f7c-431b-800c-991e3ac687e9 https://192.168.1.42:3000/service-worker-pagina-estas-offline.min.js"




#### Páginas de error ####
ErrorDocument 404 https://192.168.1.42:3000/error-404.html
ErrorDocument 403 https://192.168.1.42:3000/error-403.html
ErrorDocument 405 https://192.168.1.42:3000/error-405.html
ErrorDocument 500 https://192.168.1.42:3000/error-500.html
ErrorDocument 505 https://192.168.1.42:3000/error-505.html




#### Cambios de URL permanentes ####

# Si el archivo está en la raíz (sin el dominio y con la barra lo primero, o no funciona):
# Redirect 301 /pagina_antigua.html /pagina_nueva.html

# Si el archivo está en una carpeta:
# Redirect 301 /ruta/al/archivo/paginaantigua.html /ruta/al/archivo/paginanueva.html




#### HTTP caching ####
#- Documentación: https://web.dev/uses-long-cache-ttl/

#- [Esto debe estar en Ionos] Cargar el módulo "expires" de Apache, que nos permite usar la cabecera "Cache-Control" en los "Response Headers"
#a2enmod expires

#- Activar el módulo "expires" de Apache
ExpiresActive on

#- Establecer un valor distinto para cada tipo de archivo (mime types)

#-- Imágenes y vídeos: duración de 1 año (31.536.000 segundos) porque las imágenes no suelen cambiar y, si cambian, no pasa nada porque el navegador va a cargar la última versión porque el nombre de archivo tiene un ?v=NUMERO_VERSION al final de la URL (también se podría añadir un hash al nombre del archivo con Gulp).
ExpiresByType image/jpeg     "access plus 31536000 seconds"
ExpiresByType image/webp     "access plus 31536000 seconds"
ExpiresByType image/png      "access plus 31536000 seconds"
ExpiresByType image/svg+xml  "access plus 31536000 seconds"
ExpiresByType image/gif      "access plus 31536000 seconds"
ExpiresByType video/mp4      "access plus 31536000 seconds"
ExpiresByType video/webm     "access plus 31536000 seconds"

#-- CSS: suele cambiar con más frecuencia que las imágenes, así que conviene que la duración sea más corta.
# ExpiresByType text/css     "access plus 1 days"